#docker run --rm --platform linux/amd64 -v "$PWD":/go/src/github.com/atlassian-labs/cyclops -w /go/src/github.com/atlassian-labs/cyclops cyclops-codegen:v0.19.0


FROM golang:1.23

ARG OPERATOR_SDK_VERSION=v0.19.0

RUN apt-get update && apt-get install -y --no-install-recommends \
    curl ca-certificates \
 && rm -rf /var/lib/apt/lists/*

# Install operator-sdk v0.19.0 (prebuilt linux binary)
RUN curl -L \
    https://github.com/operator-framework/operator-sdk/releases/download/${OPERATOR_SDK_VERSION}/operator-sdk-${OPERATOR_SDK_VERSION}-x86_64-linux-gnu \
    -o /usr/local/bin/operator-sdk \
 && chmod +x /usr/local/bin/operator-sdk \
 && /usr/local/bin/operator-sdk version

ENV GOPATH=/go \
    GO111MODULE=on \
    GOFLAGS=-mod=vendor
WORKDIR /go/src/github.com/atlassian-labs/cyclops

# Helper script to generate deepcopy + CRDs into the mounted repo
RUN printf '#!/usr/bin/env bash\nset -euo pipefail\ncd /go/src/github.com/atlassian-labs/cyclops\nmkdir -p build deploy/crds\ntouch build/Dockerfile\n# ensure vendored deps for old operator-sdk generators\ngo mod tidy\ngo mod vendor\n# only generate CRDs with old operator-sdk to avoid deepcopy issues\noperator-sdk generate crds --crd-version v1\n' \
    > /usr/local/bin/generate-crds.sh \
 && chmod +x /usr/local/bin/generate-crds.sh

# Default entrypoint runs generation; override if needed
ENTRYPOINT ["/usr/local/bin/generate-crds.sh"]

